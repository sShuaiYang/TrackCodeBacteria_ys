function reCaculateFunction()
dirFile=uigetdir();
nameList=dir(dirFile);
for i=2:size(nameList,1)-2
    dirNextFile=strcat(dirFile,'\',nameList(i+2).name);
    cd(dirNextFile)
    cd(strcat(dirNextFile,'\clusterAnalyse'))
        load('frameInfo&clusterTree.mat');
        testClusterTree(clusterTree,strcat(dirNextFile,'\clusterAnalyse'),200,[]);
%         [largestMatrix,branchList]=findLargestCLuster(clusterTree{end}.distMatrix,clusterTree{end}.bacteriaList);
%     smallList=dir(dirNextFile);
%     load(smallList(3).name)
%     getAccumulateDegreeDistribution(full(clusterTree{end}.distMatrix));
%     degreeDistribution(full(clusterTree{end}.distMatrix),clusterTree{end}.bacteriaList);
%     pResult1=makeAdjacentMatrix(full(clusterTree{end}.distMatrix));
%     saveas(gcf,'2.fig');
%     close all
%     pResult2=makeGraphLaplacian(full(clusterTree{end}.distMatrix));
%     saveas(gcf,'3.fig');
%     close all
%     save('largestInfo','pResult1','pResult2');
%     plot(pResult2(:,1),pResult2(:,2));hold on
    %             uiopen('2.fig',1);
end
end
function degreeDistribution(distMatrix,branchList)
[~,degreeDistribution]=getDistDistribution(distMatrix,branchList);
if size(degreeDistribution,2)>=27
    p=polyfit(log(degreeDistribution(1,2:size(degreeDistribution,2)-5)),log(degreeDistribution(2,2:size(degreeDistribution,2)-5)),1);
    newY=exp(polyval(p,log(degreeDistribution(1,1:size(degreeDistribution,2)-5))));
else
    newY=[];
    p=[];
end
h2=createDegreeDistributionfigure(degreeDistribution(1,:), degreeDistribution(2,:),[],newY,p);
saveas(h2,'1.fig');
close all
end
function [bacteriaList,regionHist]=getDistDistribution(distMatrix,bacteriaList)
maxLink=0;
for i=1:size(distMatrix);
    distRow=distMatrix(i,:);
    if maxLink<numel(distRow(distRow==1))
        maxLink=numel(distRow(distRow==1));
    end
end
regionHist=logspace(0,3,30);
regionHist=fix(regionHist);
regionHist=[1:20,regionHist(regionHist>20)];
regionHist=regionHist(1:numel(regionHist(regionHist<maxLink))+1);
regionHist(2,size(regionHist,2))=0;
p=zeros(1000,1);
regionHistNum=[];
for i=1:size(distMatrix,1)
    linkD=distMatrix(i,:);
    linkNum=numel(linkD(linkD==1));
    bacteriaList(i,6)=linkNum;
    if linkNum==0
        p(linkNum+1)=p(linkNum+1)+1;
        continue
    end
    p(linkNum+1)=p(linkNum+1)+1;
    if linkNum<=20
        regionHist(2,linkNum)=regionHist(2,linkNum)+1;
    else
        regionHistNum=regionHist(1,:);
        properNum=numel(regionHistNum(regionHistNum<linkNum))+1;
        regionHist(2,properNum)=1/(regionHistNum(properNum)-regionHistNum(properNum-1))+regionHist(2,properNum);
    end
end
regionHist(2,:)=regionHist(2,:)/sum(regionHist(2,:));
xlable=regionHist(1,:);
xlable=(xlable+[0,xlable(1:end-1)])/2;
if ~isempty(regionHistNum)
regionHistNum(regionHistNum>20)=xlable(xlable>20 & xlable<regionHistNum(numel(regionHistNum(regionHistNum<maxLink))+1));
regionHist(1,:)=regionHistNum;
end
end
function getAccumulateDegreeDistribution(distMatrix)
accDistri=zeros(1000,2);
accDistri(:,1)=1:1000;
for i=1:size(distMatrix,2)
    distRow=distMatrix(:,i);
    numDegree=numel(distRow(distRow==1));
    if numDegree==0
        continue
    end
    accDistri(numDegree,2)=accDistri(numDegree,2)+1;
end
accDistri(accDistri(:,2)==0,:)=[];
for i=2:size(accDistri,1)
    accDistri(i,2)=accDistri(i,2)+accDistri(i-1,2);
end
plot(accDistri(i,1),accDistri(i,2))
end

function h=createDegreeDistributionfigure(X1, Y1,i,newY,p)
%CREATEFIGURE(X1,Y1)
%  X1:  vector of x data
%  Y1:  vector of y data

%  Auto-generated by MATLAB on 24-Oct-2012 09:57:36

% Create figure
figure1 = figure();
scrsz=get(0,'ScreenSize');
set(gcf,'PaperPositionMode','auto');
set(gcf,'Position',[1 1 scrsz(3) scrsz(4)]);

% Create axes
axes1 = axes('Parent',figure1,'YScale','log','YMinorTick','on',...
    'XScale','log',...
    'XMinorTick','on',...
    'Position',[0.354479166666666 0.122686000234331 0.2809375 0.698683853459973],...
    'PlotBoxAspectRatio',[1 1 1]);
box(axes1,'on');
hold(axes1,'all');

% Create loglog
loglog(X1,Y1,'Marker','o','LineStyle','none');

% Create xlabel
xlabel('degree','FontSize',20);

% Create ylabel
ylabel('percent','FontSize',20);

% Create title
title(strcat('degree distribution£¨',num2str(i),'frame£©'),'FontSize',20);

if ~isempty(p)
    hold on; plot(X1(1:numel(newY)),newY,'Color',[1,0,0])
    
    % Create textbox
    annotation(figure1,'textbox',...
        [0.4150625 0.64 0.0672010135135137 0.0558934517203116],'String',{strcat('k=',num2str(p(1)))},...
        'FontSize',16,...
        'FitBoxToText','off',...
        'LineStyle','none');
end

h=gca;
end