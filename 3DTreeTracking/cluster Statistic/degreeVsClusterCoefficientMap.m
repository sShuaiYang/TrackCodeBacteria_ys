function degreeVsClusterCoefficientMap(clusterTree,bacteriaFrameInfo,iframe)
colorChoose=zeros(1000,3);
colorChoose(:,1)=0.5;
colorChoose(1:200,:)=colormap(jet(200));
% close all
distMatrix=full(clusterTree{iframe}.distMatrix);
clusterCoefficient=zeros(size(distMatrix,1),2);
% for i=1:size(distMatrix,1)
%     iDist=distMatrix(i,:);
%     clusterCoefficient(i,1)=numel(iDist(iDist==1));
%     linkMatrix=distMatrix(iDist==1,iDist==1);
%     clusterCoefficient(i,2)=numel(linkMatrix(linkMatrix==1))/(clusterCoefficient(i,1)*(clusterCoefficient(i,1)-1));
% end
clusterCoefficient=clusterCoefficientAbout(iframe,clusterTree,bacteriaFrameInfo);
clusterCoefficient(clusterCoefficient(:,1)<=1,:)=[];
clusterCoefficient=clusterCoefficient(:,end:-1:1);
degreeCC=twoDimGaussian(clusterCoefficient);
h=createSurfacefigure(degreeCC.y',degreeCC.x',degreeCC.Image,colorChoose,iframe);
end
function result=twoDimGaussian(clusterCoefficient)
xMin=0;
yMin=0;
xMax=1;
yMax=300;
sigma1=xMax/60;
interval1=xMax/300;
sigma2=yMax/60;
interval2=yMax/300;
rowPos=xMin:interval1:xMax;
rowPos=rowPos';
columnPos=yMin:interval2:yMax;
resultImage=zeros(numel(rowPos),numel(columnPos));
for i=1:size(clusterCoefficient,1)
%     disp(i)
    rowGauss=1/(2*pi)^0.5/sigma1*exp(-(rowPos-clusterCoefficient(i,1)).^2/2/sigma1^2);
    columnGauss=1/(2*pi)^0.5/sigma2*exp(-(columnPos-clusterCoefficient(i,2)).^2/2/sigma2^2);
    resultImage=resultImage+rowGauss*columnGauss;
end
result.Image=resultImage;
result.numPoint=size(clusterCoefficient,1);
result.x=rowPos';
result.y=columnPos;
end
function h=createSurfacefigure(xdata,ydata,zdata,colorChoose,i)
%CREATEFIGURE(ZDATA1,YDATA1,XDATA1,CDATA1)
%  ZDATA1:  surface zdata
%  YDATA1:  surface ydata
%  XDATA1:  surface xdata
%  CDATA1:  surface cdata

%  Auto-generated by MATLAB on 16-Apr-2013 19:57:26

% Create figure
figure1 = figure;
% Create axes
axes1 = axes('Parent',figure1);
xlim(axes1,[0 300]);
ylim(axes1,[0 1]);
hold(axes1,'all');

% Create surface
surface('Parent',axes1,'ZData',zdata,'YData',ydata,'XData',xdata,'CData',zdata,...
    'LineStyle','none');
colorChoose=colorChoose(1:ceil(max(max(zdata))),:);
colormap(colorChoose)
% Create title
title(strcat('frameNum=',num2str(i)),'FontSize',20);

% Create xlabel
xlabel('degreeNum','FontSize',20);

% Create ylabel
ylabel('clusterCoeficient','FontSize',20);
h=gcf;
end
function kCC=clusterCoefficientAbout(aimI,clusterTree,bacteriaFrameInfo)
distMatrix=full(clusterTree{aimI}.distMatrix);
lengthInfo=[];
for iFrame=1:size(bacteriaFrameInfo,2)
   lengthInfo=[lengthInfo;bacteriaFrameInfo{iFrame}.lengthInfo];
end
averageLength=mean(lengthInfo);
bacteriaInEachFrame=bacteriaFrameInfo{aimI}.bacteriaInfo;
bacteriaList=clusterTree{aimI}.bacteriaList;
n=0;
for i=1:size(bacteriaList(:,2))
    iList=bacteriaList(i,:);
    matchNum=(bacteriaInEachFrame(:,1)==iList(1) & bacteriaInEachFrame(:,2)==iList(2) & bacteriaInEachFrame(:,3)==iList(3))==1;
    if max(matchNum)==1
        n=n+1;
        centroidInfo(n,:)=bacteriaFrameInfo{aimI}.centroidInfo(matchNum,:);
    end
end
D=pdist2(centroidInfo,centroidInfo,'euclidean');
properNum=(bacteriaList(:,1)+bacteriaList(:,4)-1)==aimI;
newMatrix=zeros(size(distMatrix));
newMatrix(properNum,properNum)=D/averageLength;
newMatrix(newMatrix<=5 & newMatrix~=0)=1;
newMatrix(newMatrix~=1)=0;
distMatrix(distMatrix~=0)=1;
distMatrix=logical(distMatrix);
matriceSize=size(distMatrix,1);
orderNum=1:matriceSize;
degree=zeros(1,matriceSize);
for i=1:matriceSize
    iLine=distMatrix(i,:);
    linkPoint=orderNum(iLine==1);
    degree(i)=numel(linkPoint);
    if isempty(linkPoint)
        clusterCoefficient(i)=0;
    end
    if numel(linkPoint)==1
        clusterCoefficient(i)=0;
    end
    if numel(linkPoint)>1
        linkMatrix=newMatrix(iLine,iLine);
        edgeNum=nnz(sparse(linkMatrix))/2;
        clusterCoefficient(i)=edgeNum/numel(linkPoint)/(numel(linkPoint)-1)*2;
    end
end
kCC(:,1)=degree;
kCC(:,2)=clusterCoefficient;
end