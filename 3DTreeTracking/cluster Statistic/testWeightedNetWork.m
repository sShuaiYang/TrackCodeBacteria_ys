function kCC=testWeightedNetWork(i,clusterTree,bacteriaFrameInfo)
% degreeDistribution(distMatrix);
kCC=clusterCoefficientAbout(i,clusterTree,bacteriaFrameInfo);
end
function degreeDistribution(distMatrix)
degreeDistribution=getDistDistribution(distMatrix);
if size(degreeDistribution,2)>=100
    p=polyfit(log(degreeDistribution(1,1:54)),log(degreeDistribution(2,1:54)),1);
    newY=exp(polyval(p,log(degreeDistribution(1,1:60))));
    p(1)=p(1)-1;
else
    newY=[];
    p=[];
end
if ~isempty(degreeDistribution)
    h2=createDegreeDistributionfigure(degreeDistribution(1,:), degreeDistribution(2,:),12460,newY,p);
end
end
function regionHist=getDistDistribution(distMatrix)
for i=1:size(distMatrix,2)
    iLine=distMatrix(i,:);
    degreeNum(i)=sum(iLine(iLine~=0));
end
maxDegree=ceil(max(degreeNum));
regionHist(1,:)=1:maxDegree;
n=0;
for i=1:maxDegree
    n=n+1;
    regionHist(2,n)=numel(degreeNum(degreeNum>=i));
end
end
function h=createDegreeDistributionfigure(X1, Y1,i,newY,p)
%CREATEFIGURE(X1,Y1)
%  X1:  vector of x data
%  Y1:  vector of y data

%  Auto-generated by MATLAB on 24-Oct-2012 09:57:36

% Create figure
figure1 = figure();
scrsz=get(0,'ScreenSize');
set(gcf,'PaperPositionMode','auto');
set(gcf,'Position',[1 1 scrsz(3) scrsz(4)]);

% Create axes
axes1 = axes('Parent',figure1,'YScale','log','YMinorTick','on',...
    'XScale','log',...
    'XMinorTick','on',...
    'Position',[0.354479166666666 0.122686000234331 0.2809375 0.698683853459973],...
    'PlotBoxAspectRatio',[1 1 1]);
box(axes1,'on');
hold(axes1,'all');

% Create loglog
loglog(X1,Y1,'Marker','o','LineStyle','none');

% Create xlabel
xlabel('degree','FontSize',20);

% Create ylabel
ylabel('percent','FontSize',20);

% Create title
title(strcat('degree distribution£¨',num2str(i),'frame£©'),'FontSize',20);

if ~isempty(p)
    hold on; plot(X1(1:numel(newY)),newY,'Color',[1,0,0])
    
    % Create textbox
    annotation(figure1,'textbox',...
        [0.4150625 0.64 0.0672010135135137 0.0558934517203116],'String',{strcat('k=',num2str(p(1)))},...
        'FontSize',16,...
        'FitBoxToText','off',...
        'LineStyle','none');
end

h=gca;
end
function kCC=clusterCoefficientAbout(aimI,clusterTree,bacteriaFrameInfo)
distMatrix=full(clusterTree{aimI}.distMatrix);
lengthInfo=[];
for iFrame=1:size(bacteriaFrameInfo,2)
   lengthInfo=[lengthInfo;bacteriaFrameInfo{iFrame}.lengthInfo];
end
averageLength=mean(lengthInfo);
bacteriaInEachFrame=bacteriaFrameInfo{aimI}.bacteriaInfo;
bacteriaList=clusterTree{aimI}.bacteriaList;
n=0;
for i=1:size(bacteriaList(:,2))
    iList=bacteriaList(i,:);
    matchNum=(bacteriaInEachFrame(:,1)==iList(1) & bacteriaInEachFrame(:,2)==iList(2) & bacteriaInEachFrame(:,3)==iList(3))==1;
    if max(matchNum)==1
        n=n+1;
        centroidInfo(n,:)=bacteriaFrameInfo{aimI}.centroidInfo(matchNum,:);
    end
end
D=pdist2(centroidInfo,centroidInfo,'euclidean');
properNum=(bacteriaList(:,1)+bacteriaList(:,4)-1)==aimI;
newMatrix=zeros(size(distMatrix));
newMatrix(properNum,properNum)=D/averageLength;
newMatrix(newMatrix<=5 & newMatrix~=0)=1;
newMatrix(newMatrix~=1)=0;
distMatrix(distMatrix~=0)=1;
distMatrix=logical(distMatrix);
matriceSize=size(distMatrix,1);
orderNum=1:matriceSize;
degree=zeros(1,matriceSize);
for i=1:matriceSize
    iLine=distMatrix(i,:);
    linkPoint=orderNum(iLine==1);
    degree(i)=numel(linkPoint);
    if isempty(linkPoint)
        clusterCoefficient(i)=0;
    end
    if numel(linkPoint)==1
        clusterCoefficient(i)=0;
    end
    if numel(linkPoint)>1
        linkMatrix=newMatrix(iLine,iLine);
        edgeNum=nnz(sparse(linkMatrix))/2;
        clusterCoefficient(i)=edgeNum/numel(linkPoint)/(numel(linkPoint)-1)*2;
    end
end
newTrace=1:max(degree);
kCC=zeros(numel(newTrace),2);
kCC(:,1)=1:numel(newTrace);
for i=2:numel(newTrace)
    kCC(i,2)=mean(clusterCoefficient(degree<=i+1&degree>=i-1));
end
kCC(isnan(kCC(:,2)),:)=[];
end
